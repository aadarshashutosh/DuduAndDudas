{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\aadar\\\\My Projects\\\\DudusAndDudas\\\\App.tsx\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nexport default function myApp() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputText = _useState2[0],\n      setInputText = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inputName = _useState4[0],\n      setName = _useState4[1];\n\n  if (inputText !== '' && inputName == true) {\n    var clearCurrent = function clearCurrent() {\n      return _regeneratorRuntime.async(function clearCurrent$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setInputText('');\n              setName(false);\n              return _context.abrupt(\"return\");\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    if (inputText == 'General Kenobi') {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'space-evenly',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      }, \"Ah... General Kenobi!\"), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }, \"Please, Come In!\"), React.createElement(Button, {\n        onPress: clearCurrent,\n        style: {\n          backgroundColor: 'blue'\n        },\n        title: 'Next!',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'space-evenly',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, \"Get Out!\"), React.createElement(Button, {\n        onPress: clearCurrent,\n        style: {\n          color: 'blue',\n          padding: 20,\n          borderRadius: 5\n        },\n        title: 'Next!',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }));\n    }\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      backgroundColor: '#000'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginTop: 60,\n      fontSize: 25,\n      backgroundColor: 'grey',\n      padding: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Hello There!\"), React.createElement(Text, {\n    style: {\n      marginTop: 20,\n      fontSize: 25,\n      backgroundColor: '#090',\n      padding: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Who are you?\"), React.createElement(TextInput, {\n    style: {\n      marginTop: 20,\n      padding: 10,\n      fontSize: 25,\n      backgroundColor: '#fff',\n      borderColor: 'black',\n      borderWidth: 1\n    },\n    placeholder: \"Type Into The Box\",\n    onChangeText: function onChangeText(inputText) {\n      return setInputText(inputText);\n    },\n    defaultValue: inputText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      setName(true);\n    },\n    title: 'Submit',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/aadar/My Projects/DudusAndDudas/App.tsx"],"names":["React","useState","myApp","inputText","setInputText","inputName","setName","clearCurrent","flex","justifyContent","alignItems","backgroundColor","color","padding","borderRadius","marginTop","fontSize","borderColor","borderWidth"],"mappings":";;;AAAA,OAAOA,KAAP,IAA0BC,QAA1B,QAAyC,OAAzC;;;;;AAGA,eAAe,SAASC,KAAT,GAAiB;AAAA,kBACED,QAAQ,CAAC,EAAD,CADV;AAAA;AAAA,MACzBE,SADyB;AAAA,MACdC,YADc;;AAAA,mBAEHH,QAAQ,CAAC,KAAD,CAFL;AAAA;AAAA,MAEzBI,SAFyB;AAAA,MAEdC,OAFc;;AAK9B,MAAIH,SAAS,KAAK,EAAd,IAAoBE,SAAS,IAAE,IAAnC,EAAyC;AACvC,QAAIE,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AACjBH,cAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,cAAAA,OAAO,CAAC,KAAD,CAAP;AAFiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAnB;;AAKA,QAAIH,SAAS,IAAE,gBAAf,EAAiC;AAG/B,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACK,UAAAA,IAAI,EAAC,CAAN;AAASC,UAAAA,cAAc,EAAC,cAAxB;AAAwCC,UAAAA,UAAU,EAAC;AAAnD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,EAGE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAEH,YAAjB;AAA+B,QAAA,KAAK,EAAE;AAACI,UAAAA,eAAe,EAAC;AAAjB,SAAtC;AAAgE,QAAA,KAAK,EAAE,OAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD,KAVD,MAUO;AACH,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACH,UAAAA,IAAI,EAAC,CAAN;AAASC,UAAAA,cAAc,EAAC,cAAxB;AAAwCC,UAAAA,UAAU,EAAC;AAAnD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAEH,YAAjB;AAA+B,QAAA,KAAK,EAAE;AAACK,UAAAA,KAAK,EAAC,MAAP;AAAeC,UAAAA,OAAO,EAAC,EAAvB;AAA2BC,UAAAA,YAAY,EAAC;AAAxC,SAAtC;AAAkF,QAAA,KAAK,EAAE,OAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAOH;AAOF;;AAGD,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACN,MAAAA,IAAI,EAAC,CAAN;AAASE,MAAAA,UAAU,EAAC,QAApB;AAA6BD,MAAAA,cAAc,EAAC,YAA5C;AAA0DE,MAAAA,eAAe,EAAC;AAA1E,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACI,MAAAA,SAAS,EAAC,EAAX;AAAcC,MAAAA,QAAQ,EAAC,EAAvB;AAA2BL,MAAAA,eAAe,EAAC,MAA3C;AAAkDE,MAAAA,OAAO,EAAC;AAA1D,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACE,MAAAA,SAAS,EAAC,EAAX;AAAcC,MAAAA,QAAQ,EAAC,EAAvB;AAA2BL,MAAAA,eAAe,EAAC,MAA3C;AAAkDE,MAAAA,OAAO,EAAC;AAA1D,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,EAME,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AAACE,MAAAA,SAAS,EAAC,EAAX;AAAcF,MAAAA,OAAO,EAAC,EAAtB;AAA0BG,MAAAA,QAAQ,EAAC,EAAnC;AAAuCL,MAAAA,eAAe,EAAC,MAAvD;AAA8DM,MAAAA,WAAW,EAAC,OAA1E;AAAmFC,MAAAA,WAAW,EAAC;AAA/F,KADT;AAEE,IAAA,WAAW,EAAC,mBAFd;AAGE,IAAA,YAAY,EAAE,sBAAAf,SAAS;AAAA,aAAIC,YAAY,CAACD,SAAD,CAAhB;AAAA,KAHzB;AAIE,IAAA,YAAY,EAAIA,SAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAaI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,mBAAM;AACrBG,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAFD;AAEG,IAAA,KAAK,EAAE,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CADF;AAoBD","sourcesContent":["import React, {Component, useState} from 'react';\nimport {Text, TextInput, StyleSheet, Button, View} from 'react-native';\n\nexport default function myApp() {\n  let [inputText, setInputText] = useState('');\n  let [inputName, setName] = useState(false);\n\n  // let StarWars = async () => {\n  if (inputText !== '' && inputName==true) {\n    let clearCurrent = async () => {\n      setInputText('');\n      setName(false);\n      return;\n      }\n    if (inputText=='General Kenobi') {\n    \n    // alert('Ah... General Kenobi!');\n      return(\n        <View style={{flex:1, justifyContent:'space-evenly', alignItems:'center'}}>\n          <Text>Ah... General Kenobi!</Text>\n          <Text>Please, Come In!</Text>\n          <Button onPress={clearCurrent} style={{backgroundColor:'blue'}} title={'Next!'} />\n        </View>\n      );\n    } else {\n        return(\n          <View style={{flex:1, justifyContent:'space-evenly', alignItems:'center'}}>\n            <Text>Get Out!</Text>\n            <Button onPress={clearCurrent} style={{color:'blue', padding:20, borderRadius:5}} title={'Next!'} />\n          </View>\n        );\n\n    }\n    //   <View style={{flex:1, justifyContent:'space-evenly', alignItems:'center'}}>\n    //     <Text style={{fontSize:25}}>\n    //       {inputText=='General Kenobi'? 'Ah... General Kenobi!':''}\n    //     </Text>\n    //   </View>\n    // )\n  }\n  // };\n  // let [inpuName, setName] = useState(false)\n  return (\n    <View style={{flex:1, alignItems:'center',justifyContent:'flex-start', backgroundColor:'#000'}}>\n      \n      <Text style={{marginTop:60,fontSize:25, backgroundColor:'grey',padding:10}}>\n          Hello There!\n        </Text>\n      <Text style={{marginTop:20,fontSize:25, backgroundColor:'#090',padding:10}}>Who are you?</Text>\n      <TextInput\n        style={{marginTop:20,padding:10, fontSize:25, backgroundColor:'#fff',borderColor:'black', borderWidth:1}}\n        placeholder=\"Type Into The Box\"\n        onChangeText={inputText => setInputText(inputText)}\n        defaultValue = {inputText}\n        />\n        \n        <Button onPress={() => {\n          setName(true);\n        }} title={'Submit'}/>\n    </View>\n  );\n  \n}"]},"metadata":{},"sourceType":"module"}